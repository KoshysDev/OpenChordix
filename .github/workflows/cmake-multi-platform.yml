name: CMake Build (Arch Linux & Windows)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows configuration (using MSVC)
          - os: windows-latest
            compiler: cl # Indicative for MSVC
            cpp_compiler: cl # Indicative for MSVC
            os_dependencies: '' # Placeholder - Needs vcpkg/manual setup + CMakeLists update

          # Arch Linux configuration (using Docker container on Ubuntu runner)
          - os: ubuntu-latest
            container: archlinux:latest
            compiler: gcc
            cpp_compiler: g++
            os_dependencies: pacman -Syu --noconfirm && pacman -S --noconfirm base-devel cmake git rtaudio alsa-lib pkgconf

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Dependencies
      # Run the dependency command specific to the OS/container from the matrix
      if: matrix.os_dependencies != ''
      run: ${{ matrix.os_dependencies }}

    - name: Configure CMake
      # Run from the checkout directory. Use relative paths.
      run: >
        cmake -B build
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.compiler }}
        -DCMAKE_BUILD_TYPE=Release
        -S .

    - name: Build
      run: cmake --build build --config Release
